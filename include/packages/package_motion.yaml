---
binary_sensor:
  - platform: template
    sensors:
      eetkamer_occupied:
        value_template: >
          {{
            is_state('timer.eetkamer_occupied','active')
            or is_state('binary_sensor.motion_eetkamer','on')
          }}
        device_class: occupancy
        delay_off: 2

  - platform: template
    sensors:
      inkomhal_occupied:
        value_template: >
          {{
            is_state('timer.inkomhal_occupied','active')
            or is_state('binary_sensor.motion_inkomhal','on')
          }}
        device_class: occupancy
        delay_off: 2

  - platform: template
    sensors:
      wc_occupied:
        value_template: >
          {{
            is_state('timer.wc_occupied','active')
            or is_state('binary_sensor.motion_wc','on')
          }}
        device_class: occupancy
        delay_off: 2

  - platform: template
    sensors:
      traphal_occupied:
        value_template: >
          {{
            is_state('timer.traphal_occupied','active')
            or is_state('binary_sensor.motion_traphal','on')
          }}
        device_class: occupancy
        delay_off: 2

  - platform: template
    sensors:
      badkamer_occupied:
        value_template: >
          {{
            is_state('timer.badkamer_occupied','active')
            or is_state('binary_sensor.motion_badkamer','on')
          }}
        device_class: occupancy
        delay_off: 2

timer:
  eetkamer_occupied:
  inkonhal_occupied:
  wc_occupied:
  traphal_occupied:
  bad_occupied:

  - id: motion_01
    alias: Motion Detection - Hall Light on
    initial_state: 'true'
    trigger:
      - platform: state
        entity_id:
          - binary_sensor.inkomhal_occupied
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: switch.easyplus
          state: 'on'
        - entity_id: binary_sensor.inkomhal_occupied
          condition: state
          state: 'on'
        - condition: template
          value_template: "{{ states.sensor.period_of_day.state != 'day' }}"
        - condition: state
          entity_id: automation.auto_off_day
          state: 'off'
    action:
    - service: timer.start
      entity_id: timer.inkonhal_occupied
      duration: '00:00:30'
    - service: homeassistant.turn_on
      entity_id: switch.light_vestiare

  - id: motion_02
    alias: Motion Detection - Hall Light off
    initial_state: 'true'
    trigger:
    - entity_id: binary_sensor.inkomhal_occupied
      condition: state
      state: 'off'
    action:
    - service: homeassistant.turn_off
      entity_id:  switch.light_vestiare
    - service: timer.cancel
      data:
        entity_id: timer.inkomhal_occupied

  - id: motion_03
    alias: Motion Detection - Dinner Light on
    initial_state: 'true'
    trigger:
    - platform: state
      entity_id: binary_sensor.motion_eetkamer
    to: 'on'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: switch.easyplus
          state: 'on'
        - condition: template
          value_template: "{{ states.sensor.period_of_day.state != 'day' }}"
        - condition: state
          entity_id: automation.auto_off_day
          state: 'off'
    action:
    - service: homeassistant.turn_on
      entity_id: switch.light_eetkamer_center

  - id: motion_dinner_off
    alias: Motion Detection - Dinner Light off
    initial_state: 'true'
    trigger:
    - platform: state
      entity_id:  binary_sensor.motion_eetkamer
      to: 'off'
      for: '00:03:00'
    action:
    - service: homeassistant.turn_off
      entity_id: switch.light_eetkamer_center

  - id: motion_04
    alias: Motion Detection - Bad Light on
    initial_state: 'true'
    trigger:
    - platform: state
      entity_id: binary_sensor.motion_badkamer
      to: 'on'
    condition:
       condition: and
       conditions:
        - condition: state
          entity_id: switch.easyplus
          state: 'on'
        - condition: template
          value_template: "{{ states.sensor.period_of_day.state != 'day' }}"
        - condition: state
          entity_id: automation.auto_off_day
          state: 'off'
    action:
    - service: homeassistant.turn_on
      entity_id: switch.light_badkamer_spiegel

  - id: motion_05
    alias: Motion Detection - Bad Light off
    initial_state: 'true'
    trigger:
    - platform: state
      entity_id:  binary_sensor.motion_badkamer
      to: 'off'
      for: '00:03:00'
    action:
    - service: homeassistant.turn_off
      entity_id: switch.light_badkamer_spiegel

  - id: motion_trap_on
    initial_state: 'true'
    alias: Motion Detection - Trap Light on
    trigger:
    - platform: state
      entity_id: binary_sensor.motion_traphal
      to: 'on'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: switch.easyplus
          state: 'on'
        - condition: state
          entity_id: automation.auto_off_day
          state: 'off'
        - condition: template
          value_template: "{{ states.sensor.period_of_day.state != 'day' }}"
    action:
    - service: homeassistant.turn_on
      entity_id: group.trap_light

  - id: motion_06
    initial_state: 'true'
    alias: Motion Detection - Trap Light off
    trigger:
    - platform: state
      entity_id:  binary_sensor.motion_traphal
      to: 'off'
      for: '00:00:15'
    action:
    - service: homeassistant.turn_off
      entity_id: group.trap_light

  - id: motion_07
    initial_state: 'true'
    alias: Motion Detection - WC off
    trigger:
    - platform: state
      entity_id: binary_sensor.motion_wc
      to: 'off'
      for: '00:01:00'
    action:
    - service: homeassistant.turn_off
      entity_id: switch.light_wc

# binary_sensor:
#   - platform: template
#     sensors:
#       office_occupied:
#         value_template: >
#           {{
#             is_state('timer.office_occupied','active')
#             or is_state('binary_sensor.office_motion','on')
#           }}
#         device_class: occupancy
#         delay_off: 2

# timer:
#   office_occupied:

# automation:
#   - alias: Office Occupied Normal
#     id: 'office_occupied_normal'
#     trigger:
#       - platform: state
#         entity_id:
#           - binary_sensor.office_occupied
#           - input_select.house_mode
#     condition:
#       - entity_id: input_select.house_mode
#         condition: state
#         state: 'normal'
#       - entity_id: binary_sensor.office_occupied
#         condition: state
#         state: 'on'
#     action:
#       - service: homeassistant.turn_on
#         data:
#           entity_id:
#             - switch.office_overhead
#       - service: homeassistant.turn_off
#         data:
#           entity_id:
#             - switch.office_nightlight

#   - alias: Office Occupied Sleep
#     id: 'office_occupied_sleep'
#     trigger:
#       - platform: state
#         entity_id:
#           - binary_sensor.office_occupied
#           - input_select.house_mode
#     condition:
#       - entity_id: input_select.house_mode
#         condition: state
#         state: 'sleep'
#       - entity_id: binary_sensor.office_occupied
#         condition: state
#         state: 'on'
#     action:
#       - service: homeassistant.turn_on
#         data:
#           entity_id:
#             - switch.office_nightlight
#       - service: homeassistant.turn_off
#         data:
#           entity_id:
#             - switch.office_overhead

#   - alias: Office Motion Stop Normal
#     id: 'office_motion_stop_normal'
#     trigger:
#       - platform: state
#         entity_id:
#           - binary_sensor.office_motion
#           - input_select.house_mode
#     condition:
#       - entity_id: input_select.house_mode
#         condition: state
#         state: 'normal'
#       - entity_id: binary_sensor.office_motion
#         condition: state
#         state: 'off'
#     action:
#       - service: timer.cancel
#         data:
#           entity_id: timer.office_occupied
#       - service: timer.start
#         data:
#           entity_id: timer.office_occupied
#           duration: '00:15:00'

#   - alias: Office Motion Stop Sleep
#     id: 'office_motion_stop_sleep'
#     trigger:
#       - platform: state
#         entity_id:
#           - binary_sensor.office_motion
#           - input_select.house_mode
#     condition:
#       - entity_id: input_select.house_mode
#         condition: state
#         state: 'sleep'
#       - entity_id: binary_sensor.office_motion
#         condition: state
#         state: 'off'
#     action:
#       - service: timer.cancel
#         data:
#           entity_id: timer.office_occupied
#       - service: timer.start
#         data:
#           entity_id: timer.office_occupied
#           duration: '00:05:00'

#   - alias: Office Unoccupied
#     id: 'office_unoccupied'
#     trigger:
#       - entity_id: binary_sensor.office_occupied
#         platform: state
#         to: 'off'
#     action:
#       - service: homeassistant.turn_off
#         data:
#           entity_id:
#             - switch.office_overhead
#             - switch.office_nightlight