input_text:
  energyid_gas:
    name: "gas"
    initial: "6f190ba2-247d-4c86-9019-bb67ed023eb1"
    max: 250
  energyid_water:
    name: "water"
    initial: "c66a0c47-4937-4d76-b650-658588900b66"
    max: 250
  energyid_e_day:
    name: "current_day"
    initial: "9677c2f3-5eff-431c-9423-a9ac8f3e9d82"
    max: 250
  energyid_e_night:
    name: "current_night"
    initial: "234731ea-0276-4d3c-a9c9-9d333ec0d189"
    max: 250

input_number:
  energyid_gas_current:
    name: gas current
    initial: 6000
    min: 6000
    max: 99999
    step: 0.001
    mode: box
  energyid_water_current:
    name: water current
    initial: 900
    min: 800
    max: 9999
    step: 0.001
    mode: box
  energyid_e_day_current:
    name: day current
    initial: 14000
    min: 14000
    max: 99999
    step: 0.001
    mode: box
  energyid_e_night_current:
    name: night current
    initial: 17000
    min: 16200
    max: 99999
    step: 0.001
    mode: box

sensor:
  - platform: file
    file_path: !secret scripts_directory_energyID_day
    name: energyid_current_day
    unit_of_measurement: 'kWh'
  - platform: file
    file_path: !secret scripts_directory_energyID_night
    name: energyid_current_night
    unit_of_measurement: 'kWh'
  - platform: file
    file_path: !secret scripts_directory_energyID_water
    name: energyid_water
    unit_of_measurement: 'm3'
  - platform: file
    file_path: !secret scripts_directory_energyID_gas
    name: energyid_gas
    unit_of_measurement: 'm3'

rest_command:
  post_energyid_gas:
    url: https://hooks.energyid.eu/services/WebhookIn/7dc3ffcb-5048-4c4f-bd95-96a8ffb6004f/GLX548G43FNK
    method: POST
    payload: '{"meterId": "{{ states.input_text.energyid_gas.state }}", "data": [["{{ states.sensor.date_time_iso.state }}", {{ states.input_number.energyid_gas_current.state }}]]}'
    content_type: application/json
    verify_ssl: true
  post_energyid_water:
    url: https://hooks.energyid.eu/services/WebhookIn/7dc3ffcb-5048-4c4f-bd95-96a8ffb6004f/GLX548G43FNK
    method: POST
    payload: '{"meterId": "{{ states.input_text.energyid_water.state }}", "data": [["{{ states.sensor.date_time_iso.state }}", {{ states.input_number.energyid_water_current.state }}]]}'
    content_type: application/json
    verify_ssl: true
  post_energyid_e_day:
    url: https://hooks.energyid.eu/services/WebhookIn/7dc3ffcb-5048-4c4f-bd95-96a8ffb6004f/GLX548G43FNK
    method: POST
    payload: '{"meterId": "{{ states.input_text.energyid_e_day.state }}", "data": [["{{ states.sensor.date_time_iso.state }}", {{ states.input_number.energyid_e_day_current.state }}]]}'
    content_type: application/json
    verify_ssl: true
  post_energyid_e_night:
    url: https://hooks.energyid.eu/services/WebhookIn/7dc3ffcb-5048-4c4f-bd95-96a8ffb6004f/GLX548G43FNK
    method: POST
    payload: '{"meterId": "{{ states.input_text.energyid_e_night.state }}", "data": [["{{ states.sensor.date_time_iso.state }}", {{ states.input_number.energyid_e_night_current.state }}]]}'
    content_type: application/json
    verify_ssl: true

automation:
  - id: energyid_01
    alias: post energyid gas
    trigger:
    - platform: state
      entity_id: input_number.energyid_gas_current
    action:
    - service: rest_command.post_energyid_gas

  - id: energyid_02
    alias: post energyid water
    trigger:
    - platform: state
      entity_id: input_number.energyid_water_current
    action:
    - service: rest_command.post_energyid_water

  - id: energyid_03
    alias: post energyid e day
    trigger:
    - platform: state
      entity_id: input_number.energyid_e_day_current
    action:
    - service: rest_command.post_energyid_e_day

  - id: energyid_04
    alias: post energyid e night
    trigger:
    - platform: state
      entity_id: input_number.energyid_e_night_current
    action:
    - service: rest_command.post_energyid_e_night


## my token eyJhbGciOiJSUzI1NiIsImtpZCI6IjhlZTBmYmExNTQzMmVmNzZhMjk4MDVhYzYyMmViNzBhIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjY0OTc2MjEsImV4cCI6MTU2NjUwMTIyMSwiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eS5lbmVyZ3lpZC5ldSIsImF1ZCI6WyJodHRwczovL2lkZW50aXR5LmVuZXJneWlkLmV1L3Jlc291cmNlcyIsIndlYi1hcGkiXSwiY2xpZW50X2lkIjoiRW5lcmd5SUQtQVBJLUV4cGxvcmVyIiwic3ViIjoiY2FkYTAzNWUtOThiMC00MDFjLWEyYTUtMjExZTgwZWM5NWYwIiwiYXV0aF90aW1lIjoxNTY2NDk3NjE0LCJpZHAiOiJsb2NhbCIsImVtYWlsIjoiZWxyYWNoaWRAZ21haWwuY29tIiwic2NvcGUiOlsicHJvZmlsZTp3cml0ZSIsInJlY29yZHM6d3JpdGUiLCJncm91cHM6d3JpdGUiXSwiYW1yIjpbInB3ZCJdfQ.FZFYiDTFzGP0DfgiW5uYISOHdqkAnAAsh1aokisIrWOOpbRWHoBqrCdwemuE97m1O1W71vDRtVTwkONdeKZWg25PmyMXj2LeJ1IJiOHTqd_EXj_eToDQ68TRLu9gELoWyS0rU_msCarOHZRolQM6j_Sf_EiL5QYerOldlTeaaMERZ-dzW6Y0Lx_5YO_l4WVvSdbGNNCZ-2DJPTeUakA0RhRypPKV66wilnBdY2HVIkFotQFkZwGQ5Vqkm77HyNoOqyrR9Q_V0-thAajpBL30AsE2G1hffa6gxklyPkcv8SIaPl2K00QCbs5JvgPPUD6j5FFxIkAo5xkuNQgm8h-uIg
# eyJhbGciOiJSUzI1NiIsImtpZCI6IjhlZTBmYmExNTQzMmVmNzZhMjk4MDVhYzYyMmViNzBhIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NjY0OTc2NjcsImV4cCI6MTU2NjUwMTI2NywiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eS5lbmVyZ3lpZC5ldSIsImF1ZCI6WyJodHRwczovL2lkZW50aXR5LmVuZXJneWlkLmV1L3Jlc291cmNlcyIsIndlYi1hcGkiXSwiY2xpZW50X2lkIjoiRW5lcmd5SUQtQVBJLUV4cGxvcmVyIiwic3ViIjoiY2FkYTAzNWUtOThiMC00MDFjLWEyYTUtMjExZTgwZWM5NWYwIiwiYXV0aF90aW1lIjoxNTY2NDk3NjE0LCJpZHAiOiJsb2NhbCIsImVtYWlsIjoiZWxyYWNoaWRAZ21haWwuY29tIiwic2NvcGUiOlsicHJvZmlsZTp3cml0ZSIsInJlY29yZHM6d3JpdGUiLCJncm91cHM6d3JpdGUiXSwiYW1yIjpbInB3ZCJdfQ.KOdGwbUVkXvBl20K3guKtAZU74snCf5lIr7Z6Fu2qCbIGLCAEd5LKTc_wnK7kr0j7vbuw8taOPsgqtgdS8nMkB3xz9J-AX30MvfbzsgtPImWl5di10ykoo6GtFrU2X4RYF-VWAsOPZcQ12IJoWobJfFEdEXjKgoYncTPt835Iwo9841A4dSUWGZkJIgEjo2Ww5eUoxgN1U8lcpg0cXki4hp94SUcEC34Om1dggCPj_R7msiXRw1rOmqLiHwnwKgTcRHYq-NWiuM1aSzOZsXduQRV5-msF10M7PGXMdr0OUxdesvC3LYKwk_jTKxUyDw0AVY4YN0equEV-lrFwqAI6A
