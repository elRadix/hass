---
group:
 easyplus_sensors:
    name: Easyplus
    control: hidden
    view: no
    icon: mdi:power
    entities:
      - sensor.easyplus
      - sensor.easyplus_kitchen
      - sensor.easyplus_was
      - sensor.easyplus_boiler

timer:
  dish:
    duration: '00:40:00'
    icon: mdi:dishwasher
  was:
    duration: '02:10:00'
    icon: mdi:washing-machine
  dryer:
    duration: '02:30:00'
    icon: mdi:tumble-dryer
  espresso:
    duration: '00:15:00'
    icon: mdi:coffee
  water:
    duration: '00:30:00'
    icon: mdi:water-pump
  oven:
    duration: '01:30:00'
    icon: mdi:toaster-oven
  microgolf:
    duration: '00:45:00'
    icon: mdi:microwave
  samsung:
    duration: '01:30:00'
    icon: mdi:television-box
  boiler_shower:
    duration: '01:30:00'
    icon: mdi:microwave

script:

  location:
    sequence:
      - service: telegram_bot.send_location
        data_template:
          latitude: '{{states.device_tracker.wdd1771871j112618.attributes.latitude}'
          longitude: '{{states.device_tracker.wdd1771871j112618.attributes.longitude}}'

  turn_on_microgolf:
    sequence:
    - service: homeassistant.turn_on
      entity_id: switch.stp_keuken_microgolf,switch.led_keuken_microgolf
    - service: timer.start
      entity_id: timer.microgolf
    - delay:
        seconds: 4
    - service: notify.dageraad
      data_template:
        message: 'microgolf timer: {{states.switch.stp_keuken_microgolf.state}}'

  turn_off_microgolf:
    sequence:
    - service: homeassistant.turn_off
      entity_id: switch.stp_keuken_microgolf,switch.led_keuken_microgolf
    - service: timer.cancel
      entity_id: timer.microgolf
    - delay:
        seconds: 4
    - service: notify.dageraad
      data_template:
        message: 'microgolf timer: {{states.switch.stp_keuken_microgolf.state}}'

  turn_on_samsung:
    sequence:
    - service: homeassistant.turn_on
      entity_id: switch.stp_eetkamer_tv
    - service: timer.start
      entity_id: timer.samsung
    - delay:
        seconds: 4
    - service: notify.dageraad
      data_template:
        message: 'Samsung timer: {{states.switch.stp_eetkamer_tv.state}}'

  turn_off_samsung:
    sequence:
    - service: homeassistant.turn_off
      entity_id: switch.stp_eetkamer_tv
    - service: timer.cancel
      entity_id: timer.samsung
    - delay:
        seconds: 4
    - service: notify.dageraad
      data_template:
        message: 'samsung timer: {{states.switch.stp_eetkamer_tv.state}}'

  turn_on_oven:
    sequence:
    - service: homeassistant.turn_on
      entity_id: switch.stp_keuken_oven,switch.led_keuken_oven
    - service: timer.start
      entity_id: timer.oven
    - delay:
        seconds: 4
    - service: notify.dageraad
      data_template:
        message: 'oven timer: {{states.switch.stp_keuken_oven.state}}'

  turn_off_oven:
    sequence:
    - service: homeassistant.turn_off
      entity_id: switch.stp_keuken_oven,switch.led_keuken_oven
    - service: timer.cancel
      entity_id: timer.oven
    - delay:
        seconds: 4
    - service: notify.dageraad
      data_template:
        message: 'oven timer: {{states.switch.stp_keuken_oven.state}}'

  turn_on_commander:
    sequence:
    - service: homeassistant.turn_on
      entity_id: switch.stp_keuken_commander
    - service: timer.start
      entity_id: timer.dish
    - delay:
        seconds: 4
    - service: notify.dageraad
      data_template:
        message: 'commander timer: {{states.switch.stp_keuken_commander.state}}'

  turn_off_commander:
    sequence:
    - service: homeassistant.turn_off
      entity_id: switch.stp_keuken_commander
    - service: timer.cancel
      entity_id: timer.dish
    - delay:
        seconds: 4
    - service: notify.dageraad
      data_template:
        message: 'commander timer: {{states.switch.stp_keuken_commander.state}}'

  turn_on_waterkoker:
    sequence:
    - service: homeassistant.turn_on
      entity_id: switch.stp_keuken_waterkoker,switch.led_keuken_waterkoker
    - service: timer.start
      entity_id: timer.water
    - delay:
        seconds: 4
    - service: notify.dageraad
      data_template:
        message: 'waterkoker timer: {{states.switch.stp_keuken_waterkoker.state}}'

  turn_off_waterkoker:
    sequence:
    - service: homeassistant.turn_off
      entity_id: switch.stp_keuken_waterkoker,switch.led_keuken_waterkoker
    - service: timer.cancel
      entity_id: timer.water
    - delay:
        seconds: 4
    - service: notify.dageraad
      data_template:
        message: 'waterkoker timer: {{states.switch.stp_keuken_waterkoker.state}}'

  turn_on_espresso:
    sequence:
    - service: homeassistant.turn_on
      entity_id: switch.stp_keuken_espresso
    - service: homeassistant.turn_on
      entity_id: switch.stp_keuken_microgolf
    - service: timer.start
      entity_id: timer.espresso
    - delay:
        seconds: 4
    - service: notify.dageraad
      data_template:
        message: 'espresso timer: {{states.switch.stp_keuken_espresso.state}}'

  turn_off_espresso:
    sequence:
    - service: homeassistant.turn_off
      entity_id: switch.stp_keuken_espresso
    - service: homeassistant.turn_off
      entity_id: switch.stp_keuken_microgolf
    - service: timer.cancel
      entity_id: timer.espresso
    - service: timer.cancel
      entity_id: timer.microgolf
    - delay:
        seconds: 4
    - service: notify.dageraad
      data_template:
        message: 'espresso timer: {{states.switch.stp_keuken_espresso.state}}'

  turn_on_dryer:
    sequence:
    - service: homeassistant.turn_on
      entity_id: switch.stp_berging_droogkast
    - service: timer.start
      entity_id: timer.dryer
    - delay:
        seconds: 4
    - service: notify.dageraad
      data_template:
        message: 'dryer timer: {{states.switch.stp_berging_dryer.state}}'

  turn_off_dryer:
    sequence:
    - service: homeassistant.turn_off
      entity_id: switch.stp_berging_dryer
    - service: timer.cancel
      entity_id: timer.dryer
    - delay:
        seconds: 4
    - service: notify.dageraad
      data_template:
        message: 'was timer: {{states.switch.stp_berging_dryer.state}}'

  turn_on_was:
    sequence:
    - service: homeassistant.turn_on
      entity_id: switch.stp_berging_was
    - service: timer.start
      entity_id: timer.was
    - delay:
        seconds: 4
    - service: notify.dageraad
      data_template:
        message: 'was timer: {{states.switch.stp_berging_was.state}}'

  turn_off_was:
    sequence:
    - service: homeassistant.turn_off
      entity_id: switch.stp_berging_was
    - service: timer.cancel
      entity_id: timer.was
    - delay:
        seconds: 4
    - service: notify.dageraad
      data_template:
        message: 'was timer: {{states.switch.stp_berging_was.state}}'

  turn_on_dish:
    sequence:
    - service: homeassistant.turn_on
      entity_id: switch.stp_keuken_dish, switch.stp_keuken_commander, switch.led_keuken_vaatwasser
    - service: timer.start
      entity_id: timer.dish
    - delay:
        seconds: 4
    - service: notify.dageraad
      data_template:
        message: 'dish timer: {{states.switch.stp_keuken_dish.state}}/{{states.switch.stp_keuken_commander.state}}'

  turn_off_dish:
    sequence:
    - service: homeassistant.turn_off
      entity_id: switch.stp_keuken_dish, switch.stp_keuken_commander, switch.led_keuken_vaatwasser
    - service: timer.cancel
      entity_id: timer.dish
    - delay:
        seconds: 4
    - service: notify.dageraad
      data_template:
        message: 'dish timer: {{states.switch.stp_keuken_dish.state}}/{{states.switch.stp_keuken_commander.state}}'

automation:

  - id: start_scenes
    initial_state: 'true'
    alias: 'start scenes'
    trigger:
    - platform: state
      entity_id: switch.led_keuken_microgolf,switch.led_keuken_waterkoker,switch.led_keuken_dish,switch.led_keuken_oven,switch.stp_keuken_oven,switch.stp_keuken_microgolf,switch.stp_eetkamer_tv,switch.stp_berging_dryer,switch.stp_berging_was,switch.stp_keuken_dish,switch.stp_keuken_commander,switch.stp_keuken_espresso,switch.stp_keuken_waterkoker
      from: 'off'
      to: 'on'
    action:
    - service: python_script.easyplus
      data_template:
        script_id: "turn_on_{{ trigger.to_state.name}}"

  - id: stop_scenes
    initial_state: 'true'
    alias: 'stop scenes manual'
    trigger:
    - platform: state
      entity_id: switch.led_keuken_microgolf,switch.led_keuken_waterkoker,switch.led_keuken_dish,switch.led_keuken_oven,switch.stp_keuken_oven,switch.stp_keuken_microgolf,switch.stp_eetkamer_tv,switch.stp_berging_dryer,switch.stp_berging_was,switch.stp_keuken_dish,switch.stp_keuken_commander,switch.stp_keuken_espresso,switch.stp_keuken_waterkoker
      from: 'on'
      to: 'off'
    action:
    - service_template: "script.turn_off_{{ trigger.to_state.name }}"

  - id: toggle_scenes_rf_keuken
    initial_state: 'true'
    alias: 'toggle scenes rf keuken'
    trigger:
    - platform: state
      entity_id:  binary_sensor.rf_btn_45a081,binary_sensor.rf_btn_793401,binary_sensor.waterkoker
      from: 'off'
      to: 'on'
    action:
    - service: python_script.easyplus_switch
      data_template:
        entity_id: "switch.stp_keuken_{{ trigger.to_state.name}}"

  - id: toggle_scenes_rf_berging
    initial_state: 'true'
    alias: 'toggle scenes rf berging'
    trigger:
    - platform: state
      entity_id:  binary_sensor.rf_btn_1c60b1,binary_sensor.rf_btn_4ffd01
      from: 'off'
      to: 'on'
    action:
    - service: python_script.easyplus_switch
      data_template:
        entity_id: "switch.stp_berging_{{ trigger.to_state.name}}"

  - id: timers_stop
    initial_state: 'true'
    alias: 'timers stop'
    trigger:
    - platform: event
      event_type: timer.finished
    condition:
      condition: template
      value_template: >
        {{ trigger.event.data.entity_id in ['timer.dish',
                                            'timer.was',
                                            'timer.dryer',
                                            'timer.espresso',
                                            'timer.waterkoker',
                                            'timer.samsung',
                                            'timer.oven',
                                            'timer.microgolf'] }}
    action:
    - service: homeassistant.turn_on
      data_template:
        entity_id: >-
          {% if trigger.event.data.entity_id == 'timer.dish' %}
            script.turn_off_dish
          {% elif trigger.event.data.entity_id == 'timer.samsung' %}
            script.turn_off_samsung
          {% elif trigger.event.data.entity_id == 'timer.microgolf' %}
            script.turn_off_microgolf
          {% elif trigger.event.data.entity_id == 'timer.oven' %}
            script.turn_off_oven
          {% elif trigger.event.data.entity_id == 'timer.waterkoker' %}
            script.turn_off_waterkoker
          {% elif trigger.event.data.entity_id == 'timer.espresso' %}
            script.turn_off_espresso
          {% elif trigger.event.data.entity_id == 'timer.was' %}
            script.turn_off_was
          {% else %}
            script.turn_off_dryer
          {% endif %}
    - service: notify.dageraad
      data_template:
        message: 'timer: {{trigger.event.data.entity_id.name}} completed'

  - id: scenes completed notification
    initial_state: 'true'
    alias: scenes completed
    trigger:
    - platform: state
      entity_id: sensor.easyplus
      to: 'off'
    condition:
      - condition: template
        value_template: "{{ states.sensor.period_of_day.state != 'night' }}"
    action:
    - service: notify.dageraad
      data_template:
        message: ' Warning Easyplus

        All scenes completed,
        easyplus will shutdown in 15min'


  - id: scenes completed
    initial_state: 'true'
    alias: scenes completed
    trigger:
    - platform: state
      entity_id: sensor.easyplus
      to: 'off'
      for:
        minutes: 15
    condition:
      - condition: state
        entity_id: sensor.day
        state: 'on'
    action:
    - service: python_script.easyplus_off
    - service: notify.dageraad
      data_template:
        message: 'All scenes completed, easyplus: {{states.switch.easyplus.state}}'




# WIP
        # timer: 'timer.{{ trigger.to_state.attributes.friendly_name }}'
        # friendly_name: '{{ trigger.to_state.attributes.friendly_name }}'
        # state: '{{ trigger.to_state.state }}'

  # - id: start_scenes_switchx
  #   initial_state: 'true'
  #   alias: 'start scenes switchx'
  #   trigger:
  #   - platform: state
  #     entity_id: switch.stp_keuken_microwave
  #     from: 'off'
  #     to: 'on'
  #   action:
  #   - service_template: 'script.{{ trigger.to_state.name }}'
  #   - service: python_script.easyplus_switch
  #     data_template:
  #       entity_id: "{{ trigger.to_state.entity_id }}"
  #       timer: 'timer.{{ trigger.to_state.attributes.friendly_name }}'
  #       friendly_name: '{{ trigger.to_state.attributes.friendly_name }}'
  #       state: '{{ trigger.to_state.state }}'

       # entity: '{{ trigger.to_state.entity_id }}'
      #  entity: '{{ trigger.to_state.entity_id }}'

    # - service: python_script.easyplus_switch
    #   data:
    #     entity_id: switch.stp_keuken_microwave
    # - service: script.turn_on_kitchen
    #   data_template:
    #     timer: 'timer.{{ trigger.to_state.attributes.friendly_name }}'
    #     friendly_name: '{{ trigger.to_state.attributes.friendly_name }}'
    #     state: '{{ trigger.to_state.state }}'
    # # - service: python_script.easyplus_switch
    # #   data_template:
    # #     entity_id: "{{ trigger.to_state.entity_id }}"
      # data_template:
      #   timer: 'timer.{{ trigger.to_state.attributes.friendly_name }}'
      #   friendly_name: '{{ trigger.to_state.attributes.friendly_name }}'
      #   state: '{{ trigger.to_state.state }}'



      # - condition: template
      #   value_template: "{{ states.sensor.period_of_day.state != 'night' }}"
      # - condition: time
      #   before: '20:00:00'
      #   after: '08:00:00'

  # - id: test multi switch
  #   initial_state: 'true'
  #   alias: 'test multi script'
  #   trigger:
  #   - platform: state
  #     entity_id: binary_sensor.rf_btn_909601
  #     from: 'off'
  #     to: 'on'
  #   action:
  #   - service: python_script.easyplus_multi
  #     data_template:
  #       entity_main: switch.stp_keuken_oven
  #       entity_sub: switch.stp_keuken_microwave


  # - id: easyplus_off_night
  #   initial_state: 'true'
  #   alias: 'test multi script'
  #   trigger:
  #   - platform: time
  #     at: '00:30:00'
  #   condition:
  #     - condition: state
  #       entity_id: input_boolean.night
  #       state: 'on'
  #   action:
  #   - service: python_script.easyplus_off
  #     data_template:
  #       script_1: script.lights
  #       script_2: script.switches
  #       entity_id: switch.easyplus
  #   - service: notify.dageraad
  #     data:
  #       message: "Night Modus, Lights, Switches and Easyplus Off"
