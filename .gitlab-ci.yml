---
image: docker:latest

stages:
  - preflight
  - homeassistant

# Generic preflight template
.preflight: &preflight
  stage: preflight
#  tags:
#    - preflight

# Generic Home Assistant template
.ha: &ha
  stage: homeassistant
  variables:
    PYTHONPATH: "/usr/src/app:$PYTHONPATH"
  before_script:
    - cp secrets_redacted.yaml secrets.yaml
    - mkdir fake_directory/
    - touch fake_directory/data.log
    - touch fake_directory/cert.log
    - touch fake_directory/cert_eu.log
    - echo "10" > fake_directory/cert.log
    - echo "10" > fake_directory/cert_eu.log
    - python -m homeassistant --version
    - cp -R ./.stubs/* ./config
  script:
    - |
      python -m homeassistant \
        --config ./config/ \
        --script check_config \
        --info all
#  tags:
#    - test

# Preflight jobs
shellcheck:
  <<: *preflight
  image:
    name: koalaman/shellcheck-alpine:stable
    entrypoint: [""]
  before_script:
    - shellcheck --version
    - apk --no-cache add grep
    - |
      find . -type f -print0 | \
        xargs -0 sed -i 's:#!/usr/bin/with-contenv bash:#!/bin/bash:g'
  script:
    - |
      for file in $(grep -IRl "#\!\(/usr/bin/env \|/bin/\)" --exclude-dir ".git" "${ADDON_TARGET}"); do
        if ! shellcheck $file; then
          export FAILED=1
        else
          echo "$file OK"
        fi
      done
      if [ "${FAILED}" = "1" ]; then
        exit 1
      fi
  allow_failure: true
  
yamllint:
  <<: *preflight
  image: sdesbure/yamllint
  before_script:
    - yamllint --version
  script:
    - yamllint .
  allow_failure: true

jsonlint:
  <<: *preflight
  image: sahsu/docker-jsonlint
  before_script:
    - jsonlint --version || true
  script:
    - |
      for file in $(find . -type f -name "*.json"); do
        if ! jsonlint -q $file; then
          export FAILED=1
        else
          echo "$file OK"
        fi
      done
      if [ "${FAILED}" = "1" ]; then
        exit 1
      fi
  allow_failure: true
  
markdownlint:
  <<: *preflight
  image:
    name: ruby:alpine
    entrypoint: [""]
  before_script:
    - gem install mdl
    - mdl --version
  script:
    - mdl --style all --warnings .
  allow_failure: true

# Home Assistant test jobs
ha-latest:
  <<: *ha
  image:
    name: homeassistant/home-assistant:latest
    entrypoint: [""]

ha-rc:
  <<: *ha
  image:
    name: homeassistant/home-assistant:rc
    entrypoint: [""]
  allow_failure: true

ha-dev:
  <<: *ha
  image:
    name: homeassistant/home-assistant:dev
    entrypoint: [""]
  allow_failure: true
