---
kind: pipeline
name: Home Assistant

steps:
  - name: "Config Check: Dev"
    image: homeassistant/home-assistant:dev
    pull: always
    failure: ignore
    commands:
      - mkdir -p fake_directory
      - touch fake_directory/data.log
      - touch fake_directory/cert.log
      - echo "10" > fake_directory/cert.log
      - touch fake_directory/cert_eu.log
      - echo "10" > fake_directory/cert_eu.log
      - mv secrets_redacted.yaml secrets.yaml
      - hass --version
      - hass -c . --script check_config
  - name: "Config Check: Latest"
    image: homeassistant/home-assistant:latest
    pull: always
    commands:
      - mkdir -p fake_directory
      - touch fake_directory/data.log
      - touch fake_directory/cert.log
      - echo "10" > fake_directory/cert.log
      - touch fake_directory/cert_eu.log
      - echo "10" > fake_directory/cert_eu.log
      - mv secrets_redacted.yaml secrets.yaml
      - hass --version
      - hass -c . --script check_config
  - name: "Config Check: RC"
    image: homeassistant/home-assistant:rc
    pull: always
    failure: ignore
    commands:
      - mkdir -p fake_directory
      - touch fake_directory/data.log
      - touch fake_directory/cert.log
      - echo "10" > fake_directory/cert.log
      - touch fake_directory/cert_eu.log
      - echo "10" > fake_directory/cert_eu.log
      - mv secrets_redacted.yaml secrets.yaml
      - hass --version
      - hass -c . --script check_config
  - name: Linting
    image: python:3
    commands:
      - pip3 install --upgrade pip yamllint
      - yamllint .

pipeline:
  telegram-notification:
    image: appleboy/drone-telegram
    secrets: [ telegram_token, telegram_to ]
    when:
      status: [ success, failure ]
    format: markdown
    message: >
      {{#success build.status}}
      ✅ Drone Build #{{build.number}} of `{{repo.name}}` succeeded.


      📝 Commit by {{commit.author}} on `{{commit.branch}}`:

      ```
      {{commit.message}}
      ```


      🌐 {{ build.link }}
      {{else}}
      ❌ Drone Build #{{build.number}} of `{{repo.name}}` failed.


      📝 Commit by {{commit.author}} on `{{commit.branch}}`:

      ```
      {{commit.message}}
      ```


      🌐 {{ build.link }}
      {{/success}}


# kind: pipeline
# name: Home Assistant

# steps:
#   - name: test
#     image: homeassistant/home-assistant:latest
#     commands:
#       - mkdir -p fake_directory
#       - touch fake_directory/data.log
#       - touch fake_directory/cert.log
#       - echo "10" > fake_directory/cert.log
#       - touch fake_directory/cert_eu.log
#       - echo "10" > fake_directory/cert_eu.log
#       - mv secrets_redacted.yaml secrets.yaml
#       - hass -c . --script check_config

# kind: pipeline
# name: default

# steps:
#   - name: test
#     image: homeassistant/home-assistant:latest
#     commands:
#       - mkdir -p fake_directory
#       - touch fake_directory/data.log
#       - touch fake_directory/cert.log
#       - echo "10" > fake_directory/cert.log
#       - touch fake_directory/cert_eu.log
#       - echo "10" > fake_directory/cert_eu.log
#       - mv secrets_redacted.yaml secrets.yaml
#       - hass -c . --script check_config

# ---
# kind: pipeline
# name: Home Assistant

# steps:
#   - name: "Config Check: latest"
#     image: homeassistant/home-assistant:latest
#     # pull: always
#     # failure: ignore
#     commands:
#       - mkdir -p fake_directory
#       - touch fake_directory/data.log
#       - touch fake_directory/cert.log
#       - echo "10" > fake_directory/cert.log
#       - touch fake_directory/cert_eu.log
#       - echo "10" > fake_directory/cert_eu.log
#       - mv secrets_redacted.yaml secrets.yaml
#       - hass -c . --script check_config
  # - name: "Config Check: Latest"
  #   image: homeassistant/home-assistant:latest
  #   pull: always
  #   commands:
  #     - mkdir -p fake_directory
  #     - touch fake_directory/data.log
  #     - touch fake_directory/cert.log
  #     - echo "10" > fake_directory/cert.log
  #     - touch fake_directory/cert_eu.log
  #     - echo "10" > fake_directory/cert_eu.log
  #     - mv secrets_redacted.yaml secrets.yaml
  #     - hass -c . --script check_config
  # - name: "Config Check: RC"
  #   image: homeassistant/home-assistant:rc
  #   pull: always
  #   commands:
  #     - mkdir -p fake_directory
  #     - touch fake_directory/data.log
  #     - touch fake_directory/cert.log
  #     - echo "10" > fake_directory/cert.log
  #     - touch fake_directory/cert_eu.log
  #     - echo "10" > fake_directory/cert_eu.log
  #     - mv secrets_redacted.yaml secrets.yaml
  #     - hass -c . --script check_config
  # - name: Linting
  #   image: python:3
  #   commands:
  #     - pip3 install --upgrade pip yamllint
  #     - yamllint .


# pipeline:
#   telegram-notification:
#     image: appleboy/drone-telegram
#     secrets: [ telegram_token, telegram_to ]
#     when:
#       status: [ success, failure ]
#     format: markdown
#     message: >
#       {{#success build.status}}
#       ✅ Drone Build #{{build.number}} of `{{repo.name}}` succeeded.


#       📝 Commit by {{commit.author}} on `{{commit.branch}}`:

#       ```
#       {{commit.message}}
#       ```


#       🌐 {{ build.link }}
#       {{else}}
#       ❌ Drone Build #{{build.number}} of `{{repo.name}}` failed.


#       📝 Commit by {{commit.author}} on `{{commit.branch}}`:

#       ```
#       {{commit.message}}
#       ```


#       🌐 {{ build.link }}
#       {{/success}}


  # - name: deploy
  #   image: appleboy/drone-scp
  #   settings:
  #     host: <your-ip-address>
  #     username:
  #       from_secret: ssh_username
  #     password:
  #       from_secret: ssh_password
  #     port: 22
  #     target: /share/VM/homeautomation/home-assistant
  #     source:
  #        - .

  # - name: update
  #   image: appleboy/drone-ssh
  #   settings:
  #     host: <your-ip-address>
  #     username:
  #       from_secret: ssh_username
  #     password:
  #       from_secret: ssh_password
  #     port: 22
  #     script:
  #       - /share/CACHEDEV1_DATA/.qpkg/container-station/bin/docker restart homeassistant



# pipeline:
#   # Fetch folders from distributed cache
#   HA_PROD:
#     image: homeassistant/home-assistant:latest
#     commands:
#       - mkdir -p fake_directory
#       - touch fake_directory/data.log
#       - touch fake_directory/cert.log
#       - echo "10" > fake_directory/cert.log
#       - touch fake_directory/cert_eu.log
#       - echo "10" > fake_directory/cert_eu.log
#       - mv secrets_redacted.yaml secrets.yaml
#       - hass -c . --script check_config
#   HA_RC:
#     image: homeassistant/home-assistant:rc
#     commands:
#       # - mkdir -p fake_directory
#       # - touch fake_directory/data.log
#       # - touch fake_directory/cert.log
#       # - echo "10" > fake_directory/cert.log
#       # - touch fake_directory/cert_eu.log
#       # - echo "10" > fake_directory/cert_eu.log
#       # - mv secrets_redacted.yaml secrets.yaml
#       - hass -c . --script check_config
#   HA_DEV:
#     image: homeassistant/home-assistant:dev
#     commands:
#       # - mkdir -p fake_directory
#       # - touch fake_directory/data.log
#       # - touch fake_directory/cert.log
#       # - echo "10" > fake_directory/cert.log
#       # - touch fake_directory/cert_eu.log
#       # - echo "10" > fake_directory/cert_eu.log
#       # - mv secrets_redacted.yaml secrets.yaml
#       - hass -c . --script check_config
